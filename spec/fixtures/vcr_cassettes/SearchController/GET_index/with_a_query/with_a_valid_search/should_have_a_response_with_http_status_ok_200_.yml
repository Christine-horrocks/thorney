---
http_interactions:
- request:
    method: get
    uri: https://api.parliament.uk/search/description
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      - application/opensearchdescription+xml
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<AUTH_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Transfer-Encoding:
      - chunked
      Content-Type:
      - application/opensearchdescription+xml
      Expires:
      - "-1"
      Request-Context:
      - appId=cid-v1:330aa411-57af-491f-b22a-1cab7d08a6a9
      Set-Cookie:
      - ARRAffinity=7b3a533f561e7e09c1c0a936ab27adabbffe4ec239df09d0c46775c50b146a87;Path=/;HttpOnly;Domain=search201710091000.azurewebsites.net
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Thu, 14 Jun 2018 15:50:44 GMT
    body:
      encoding: UTF-8
      string: "<?xml version=\"1.0\"?>\r\n<OpenSearchDescription xmlns=\"http://a9.com/-/spec/opensearch/1.1/\">\r\n
        \ <ShortName>parliament.uk</ShortName>\r\n  <Description>UK Parliament</Description>\r\n
        \ <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/atom+xml\" />\r\n  <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/rss+xml\" />\r\n  <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/json\" />\r\n  <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"text/json\" />\r\n  <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"text/xml\" />\r\n  <Url template=\"https://api-parliament-uk.azure-api.net/Staging/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/xml\" />\r\n</OpenSearchDescription>"
    http_version: 
  recorded_at: Thu, 14 Jun 2018 15:50:42 GMT
- request:
    method: get
    uri: https://api-parliament-uk.azure-api.net/Staging/search?count=10&q=banana&start=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      - application/atom+xml
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<AUTH_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Content-Length:
      - '2523'
      Content-Type:
      - application/atom+xml
      Expires:
      - "-1"
      Vary:
      - Accept-Encoding
      Request-Context:
      - appId=cid-v1:330aa411-57af-491f-b22a-1cab7d08a6a9
      Set-Cookie:
      - ARRAffinity=7b3a533f561e7e09c1c0a936ab27adabbffe4ec239df09d0c46775c50b146a87;Path=/;HttpOnly;Domain=search201710091000.azurewebsites.net
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Thu, 14 Jun 2018 15:50:45 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 14 Jun 2018 15:50:43 GMT
- request:
    method: get
    uri: https://api-parliament-uk.azure-api.net/Staging/search?count=10&q=banana&start=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      - application/atom+xml
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<AUTH_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Content-Length:
      - '2525'
      Content-Type:
      - application/atom+xml
      Expires:
      - "-1"
      Vary:
      - Accept-Encoding
      Request-Context:
      - appId=cid-v1:330aa411-57af-491f-b22a-1cab7d08a6a9
      Set-Cookie:
      - ARRAffinity=7b3a533f561e7e09c1c0a936ab27adabbffe4ec239df09d0c46775c50b146a87;Path=/;HttpOnly;Domain=search201710091000.azurewebsites.net
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Thu, 14 Jun 2018 15:50:46 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 14 Jun 2018 15:50:43 GMT
recorded_with: VCR 4.0.0
