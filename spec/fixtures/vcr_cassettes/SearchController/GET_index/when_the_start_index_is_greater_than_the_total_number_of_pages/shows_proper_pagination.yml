---
http_interactions:
- request:
    method: get
    uri: https://api.parliament.uk/search/description
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      - application/opensearchdescription+xml
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<AUTH_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Transfer-Encoding:
      - chunked
      Content-Type:
      - application/opensearchdescription+xml
      Expires:
      - "-1"
      Request-Context:
      - appId=cid-v1:330aa411-57af-491f-b22a-1cab7d08a6a9
      Set-Cookie:
      - ARRAffinity=86446098da8de5f00b83089ea395bfc10c8d53c3a1350acab6a5cba5ddab4ec2;Path=/;HttpOnly;Domain=search201806151230.azurewebsites.net
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Tue, 17 Jul 2018 10:46:21 GMT
    body:
      encoding: UTF-8
      string: "<?xml version=\"1.0\"?>\r\n<OpenSearchDescription xmlns=\"http://a9.com/-/spec/opensearch/1.1/\">\r\n
        \ <ShortName>parliament.uk</ShortName>\r\n  <Description>UK Parliament</Description>\r\n
        \ <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/atom+xml\" />\r\n  <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/rss+xml\" />\r\n  <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/json\" />\r\n  <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"text/json\" />\r\n  <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"text/xml\" />\r\n  <Url template=\"https://api.parliament.uk/search?q={searchTerms}&amp;start={startIndex?}&amp;count={count?}\"
        type=\"application/xml\" />\r\n</OpenSearchDescription>"
    http_version: 
  recorded_at: Tue, 17 Jul 2018 10:46:19 GMT
- request:
    method: get
    uri: https://api.parliament.uk/search?count=100&q=test&start=70100
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      - application/atom+xml
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<AUTH_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Content-Length:
      - '8622'
      Content-Type:
      - application/atom+xml
      Expires:
      - "-1"
      Vary:
      - Accept-Encoding
      Request-Context:
      - appId=cid-v1:330aa411-57af-491f-b22a-1cab7d08a6a9
      Set-Cookie:
      - ARRAffinity=0e5a036851de64e8b461905eeb538e1756630de611c59b3d2e24b7d57adc1e0d;Path=/;HttpOnly;Domain=search201710131103.azurewebsites.net
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Tue, 17 Jul 2018 10:46:22 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 17 Jul 2018 10:46:20 GMT
recorded_with: VCR 4.0.0
